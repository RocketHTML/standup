HolbieViewer Github
	- Dockerfile (RUN)
		- I could give them a docker file
			- install polymer
			- mkdir viewerrepo
			- cd viewerrepo && pull origin
			- serve_polymer.sh
	- /viewerrepo
		- serve_polymer.sh
			- (INTERVAL) update.sh
				- pull origin master
			- serve polymer
		- javascript
			- reads local JSON file on an interval
			- contains a single variable -> number of files in certificates directory
		- JSON variable
		- /certificates
		- update.sh
			- pull origin master

========================================================================================================		
Issuer Github Devops -> 
			pull CT CI folders -> commit CT CI, /CX.x.x.x -> push -> 
	(re-execute) 	pull CT CI folders
========================================================================================================

HolbieIssuer
	- Dockerfile 
		- mount private_key.txt and .ssh
		- set up environment
			- gain pip
			- gain virtual environments
		- setup
			- pull CT and CI from github
			- create two venvs outside the local repo (blockchain/projectrepo/CT && CI)
				- run cert tools venv
				- run cert tools setup.py
					gain cert tools commands
				- deactivate venv
				- - - - - - - - - - - - - - - - -
				- run cert issuer venv
				- run cert issuer setup.py
					gain cert issuer commands
				- deactivate venv
	- IssueCertificates.sh 
		- pull csv (CT)
		- pull certtools_conf (CT)
		- pull certissuer_conf (CI)
		- pull blockchain certs (viewer_repo) (not for issuing)
		- activate CT venv
			- make batch
			- commit push to github
			- deactivate
		- activate CI venv
			- issue certs
			- commit push to github
			- deactivate
		- ./viewer_repo/updateHolbieViewer.sh
	- viewer_repo
			- viewer_repo
				- /blockchain_certs 
				- .gitignore (.gitignore)
				- updateHolbieViewer.sh (.gitignore)
					- commit & push to holbie repo
			

========================================================================================================
To use the Holberton Issuer
	- pull our dockerfile, /CT, and /CI 
		- modify MOUNT (.ssh and private_key.txt)		<- 0. importat ->
		- modify RUN export issuer_repo=<github ssh url>	<- 1. important ->

	- adjust CT.conf and CI.conf   		<- 2. important -> <- 0. loop ->
	- create CT.csv 			<- 3. important -> <- 1. loop ->
	
	- push to your issuer repo				<- 4. important -> <- 2. loop ->
	- add your sshkey to your issuer repo on github		<- 5. important ->
	
	- build and run docker image
	- call IssueCertificates from within it		<- relies on 0 1 2 3 4 and 5 -> <- 3. loop ->

======================================================================================================
To re-use the issuer after having down the important steps once, 
you just need to do the loop steps:  0 1 2 and 3
======================================================================================================

CT
- CT.csv
- CT.conf
CI
- CI. conf
